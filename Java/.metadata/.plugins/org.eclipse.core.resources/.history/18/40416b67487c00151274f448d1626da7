package mvc;

import java.awt.BorderLayout;
import java.awt.Point;
import java.util.ArrayList;

import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public abstract class View extends JFrame implements Observer {

	private Controller controller;
	private Model model;

	private JInternalFrame jif;

	private static int frameCountY = 1;
	private static int frameCountX = 0;

	private ArrayList<JInternalFrame> frameList;

	public View() {
		jif = new JInternalFrame();
		jif.setClosable(true);
		jif.setResizable(true);
		jif.setMaximizable(true);
		jif.setIconifiable(true);
	    jif.setLocation(new Point(15*frameCountY+100*frameCountX, 15*frameCountY));
	    if(frameCountY++>8){
	     frameCountY=1;
	     if(frameCountX++>4){
	      frameCountY=1;
	      frameCountX=1;
	     }
	    }
	}

	public void update(Observable observable) {

	}

	public Controller getController() {
		return controller;
	}

	public void setController(Controller controller) {
		this.controller = controller;
	}

	public Model getModel() {
		return model;
	}

	public void setModel(Model model) {
		this.model = model;
	}

	public ArrayList<JInternalFrame> getFrameList() {
		return frameList;
	}

	public void setFrameList(ArrayList<JInternalFrame> frameList) {
		this.frameList = frameList;
	}

	public JInternalFrame getJif() {
		return jif;
	}

	public void setJif(JInternalFrame jif) {
		this.jif = jif;
	}
}
