package mvc;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.util.Observer;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

public abstract class View implements Observer {

	protected Model model;
	protected Controller controller;

	private String label;
	private JInternalFrame jif;
	
	private JPanel panelbuttons;
	private JButton upJButton;
	private JButton downJButton;

	View(String label, Model model, Controller controller, Window window) {
		this.label = label;
		this.model = model;
		this.controller = controller;
		jif = new JInternalFrame(label);
		jif.setClosable(true);
		jif.setResizable(true);
		jif.setMaximizable(true);
		jif.setIconifiable(true);
		jif.add(new JLabel(label), BorderLayout.NORTH);
		panelbuttons = new JPanel();
		upJButton = new JButton("+");
		downJButton = new JButton("-");
		panelbuttons.add(upJButton);
		panelbuttons.add(downJButton);
		getJif().add(panelbuttons, BorderLayout.SOUTH);
		jif.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		model.addObserver(this); // Connexion entre la vue et le modele
		jif.setLocation(0,0);
		jif.setSize(320, 180);
		jif.setVisible(true);
		window.getDesktop().add(jif);
	}

	public JPanel getPanelbuttons() {
		return panelbuttons;
	}

	public void setPanelbuttons(JPanel panelbuttons) {
		this.panelbuttons = panelbuttons;
	}

	protected Model model() {
		return model;
	}
	
	public JInternalFrame getJif() {
		return jif;
	}

	public void setJif(JInternalFrame jif) {
		this.jif = jif;
	}
	
	public void setDisplay(String s) {
		display.setText(s);
	}

	public float getDisplay() {
		float result = 0;
		try {
			result = Float.valueOf(display.getText());
		} catch (NumberFormatException e) {
		}
		return result;
	}

	public void addDisplayListener(ActionListener a) {
		display.addActionListener(a);
	}
	
	public void addUpListener(ActionListener a) {
		upJButton.addActionListener(a);
	}

	public void addDownListener(ActionListener a) {
		downJButton.addActionListener(a);
	}
}
